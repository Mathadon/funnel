name: CMake

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest, windows-latest, macos-latest]
        python-version: ['2.x', '3.x']

    steps:
      - uses: actions/checkout@v2

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.8
        with:
          cmake-version: '3.19.x'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -VV
          python -m pip install --user --upgrade pip
          python -m pip install --user -r ${{ github.workspace }}/requirements.txt

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: |
          cmake --version
          cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{ github.workspace }}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake ..

      - name: Build
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --target install --config $BUILD_TYPE

      - name: Test
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: ctest --config $BUILD_TYPE --verbose

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
            # Artifact name
            name: binary
            # A file, directory or wildcard pattern that describes what to upload
            path: ${{github.workspace}}/pyfunnel/lib/
            # The desired behavior if no files are found using the provided path.
            if-no-files-found: error
